---
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config
  namespace: monitoring
data:
  collector.yaml: |
    receivers:
      # Data sources: logs
      fluentforward:
        endpoint: 0.0.0.0:8006

      # Data sources: metrics
      hostmetrics:
        scrapers:
          cpu:
          disk:
          filesystem:
          load:
          memory:
          network:
          process:
          processes:

      # Data sources: traces
      jaeger:
        protocols:
          grpc:
          thrift_binary:
          thrift_compact:
          thrift_http:

      # Data sources: traces
      kafka:
        protocol_version: 2.0.0

      # Data sources: traces, metrics
      opencensus:

      # Data sources: traces, metrics, logs
      otlp:
        protocols:
          grpc:
          http:

      # Data sources: metrics
      prometheus:
        config:
          scrape_configs:
            - job_name: "otel-collector"
              scrape_interval: 5s
              static_configs:
                - targets: ["localhost:8888"]

      # Data sources: traces
      zipkin:

    processors:

    exporters:
      logging:

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: []
          exporters: [logging]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-agent-config
  namespace: monitoring
data:
  agent.yaml: |
    receivers:
      # Data sources: logs
      fluentforward:
        endpoint: 0.0.0.0:8006

      # Data sources: metrics
      hostmetrics:
        scrapers:
          cpu:
          disk:
          filesystem:
          load:
          memory:
          network:
          process:
          processes:

      # Data sources: traces
      jaeger:
        protocols:
          grpc:
          thrift_binary:
          thrift_compact:
          thrift_http:

      # Data sources: traces
      kafka:
        protocol_version: 2.0.0

      # Data sources: traces, metrics
      opencensus:

      # Data sources: traces, metrics, logs
      otlp:
        protocols:
          grpc:
          http:

      # Data sources: metrics
      prometheus:
        config:
          scrape_configs:
            - job_name: "otel-collector"
              scrape_interval: 5s
              static_configs:
                - targets: ["localhost:8888"]

      # Data sources: traces
      zipkin:

    processors:

    exporters:
      otlp:
        endpoint: "opentelemetrycollector:4317"
        insecure: true

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: []
          exporters: [otlp]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentelemetrycollector
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetrycollector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opentelemetrycollector
    spec:
      containers:
      - name: otelcol
        args:
        - --config=/conf/collector.yaml
        image: otel/opentelemetry-collector:0.18.0
        volumeMounts:
        - mountPath: /conf
          name: collector-config
      volumes:
      - configMap:
          items:
          - key: collector.yaml
            path: collector.yaml
          name: collector-config
        name: collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: opentelemetrycollector
  namespace: monitoring
spec:
  ports:
  - name: grpc-otlp
    port: 4317
    protocol: TCP
    targetPort: 4317
  selector:
    app.kubernetes.io/name: opentelemetrycollector
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-test-app
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: otel-test-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: otel-test-app
    spec:
      containers:
      - name: otel-test-app
        image: quay.io/jpkroehling/generate-span-java:0.1.0
      - name: otel-agent
        image: otel/opentelemetry-collector:0.18.0
        args:
        - --config=/conf/agent.yaml
        volumeMounts:
        - mountPath: /conf
          name: agent-config
      volumes:
      - configMap:
          items:
          - key: agent.yaml
            path: agent.yaml
          name: otel-agent-config
        name: agent-config
